<?php

define('COL_START'      , 'B');      // The first significant column in xlsx
define('COL_END'        , 'D');      // The last column in xlsx
define('COL_VISIBILITY' , 'I'); // The column that toggles visibility in xlsx

require_once 'lib/PHPExcel/Classes/PHPExcel/IOFactory.php';
require_once 'pc_parse.php';

function pc_menu() {
    $items['admin/property-compendium'] = array(
        'title' => 'Property compendium',
        'access callback' => true,
        'description' => 'Manage property compendium',
        'page callback' => 'pc_overview_page',
    );

    $items['admin/property-compendium/overview'] = array(
        'title' => 'Overview',
        'description' => 'Overview of properties',
        'type' => MENU_DEFAULT_LOCAL_TASK
    );

    $items['admin/property-compendium/upload'] = array(
        'title' => 'Upload',
        'description' => 'Upload property compendium data',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('pc_upload_form'),
        'access callback' => true,
        'type' => MENU_LOCAL_TASK
    );

    $items['property-portfolio/profiles/%pc_property'] = array(
        'title callback' => 'pc_title',
        'title arguments' => array(2),
        'page callback' => 'pc_property_page',
        'page arguments' => array(2),
        'access callback' => true
    );

    return $items;
}

function pc_property_load($title) {

    $file = file_load(variable_get('compendium', false));
    $filepath = drupal_realpath($file->uri);
    $objPHPExcel = PHPExcel_IOFactory::load($filepath);
    $sheet = $objPHPExcel->getSheetByName(pc_dash_to_space($title));

    $data = pc_process_sheet($sheet);

    return (object) $data;
}

function pc_title($pc_property) {
    return pc_dash_to_space($pc_property->title);
}

function pc_dash_to_space($string) {
    return str_replace('-', ' ', $string);
}

function pc_property_page($pc_property) {

    return array(
        '#theme' => 'pie',
        '#piedata' => pc_piedata_from_graphdata($pc_property->graphdata)
    );
}

function pc_theme() {
    return array(
        'pie' => array(
            'variables' => array('piedata' => array())
        )
    );
}

function theme_pie($variables) {

    drupal_add_js( drupal_get_path('module', 'pc') . '/lib/d3/d3.v2.js');
    drupal_add_js( drupal_get_path('module', 'pc') . '/js/pie.js', array('weight' => 99));
    $id = rand();

    $piedata = json_encode($variables['piedata']);

    return <<<EOT
<div id='pie$id'></div>
<script>
var piedata$id = $piedata;
drawPie(piedata$id, '#pie$id');
</script>
EOT;

}

function pc_piedata_from_graphdata($graphdata) {
    return array(
        'values' => array_values($graphdata),
        'legend' => array_keys($graphdata),
    );
}

function pc_overview_page() {
    $file = file_load(variable_get('compendium', false));

    if ($file == false) {
        return '<h1>You need to upload a compendium file</h1>'.l('Upload', 'admin/property-compendium/upload');
    }

    $filepath = drupal_realpath($file->uri);

    $objPHPExcel = PHPExcel_IOFactory::load($filepath);

    $sheets = $objPHPExcel->getSheetCount();


    $header = array('Sheet name', 'Centre Narrative', 'Graph');
    $rows = array();
    for ($i = 2; $i < $sheets; $i ++) {
        $sheet = $objPHPExcel->getSheet($i);
        $title = $sheet->getTitle();
        $property = pc_process_sheet($sheet);
        $rows[] = array(
            $title,
            $property['centre_narrative'],
            theme('pie', array('piedata' => pc_piedata_from_graphdata($property['graphdata'])))
        );
    }

    return array(
        'sheets' => array(
            '#theme' => 'table',
            '#rows' => $rows,
            '#header' => $header
        )
    );
}

function pc_upload_form($form, &$form_state) {

    $form = array();

    $fid = variable_get('compendium', false);

    if ($fid == false) {
            $instruction = '<h1>Upload property compendium file. xlsx or xlsm</h1>';
    } else {
            $instruction = "<h1>You already have a compendium file.</h1><h1>Only upload a new file if you want to replace the current compendium file. </h1>";
    }

    $form['instruction'] = array(
        '#markup' => $instruction
    );

    $form['compendium'] = array(
        '#title' => t('Choose property compendium file'),
        '#type' => 'file'
    );

    $form['submit'] = array(
        '#value' => t('Upload'),
        '#type' => 'submit'
    );

    return $form;
}

function pc_upload_form_validate($form, &$form_state) {
    $validators = array(
        'file_validate_extensions' => array('xlsx xlsm')
    );
    $mFile = file_save_upload('compendium', $validators, 'public://');

    if ($mFile == false) {
        form_set_error('compendium', 'Need to select a file');
    }
}

function pc_upload_form_submit($form, &$form_state) {
    $mFile = file_save_upload('compendium');
    variable_set('compendium', $mFile->fid);
    drupal_set_message("Great success. $mFile->filename uploaded.");
}

function pc_read_excel($file) {
    $objPHPExcel = PHPExcel_IOFactory::load($file);

    $sheets = $objPHPExcel->getSheetCount();

    pc_process_sheet($objPHPExcel->getSheet(0));
}

function pc_process_sheet($sheet) {
    $rowmax = $sheet->getHighestRow();

    $parse = new Parse();

    for ($row = 1; $row <=$rowmax; $row++) {
        // read row of data into an array
        $rowData = $sheet->rangeToArray(COL_START . $row . ':'. COL_END . $row,
            NULL,
            TRUE,
            FALSE);

        $parse->processRow($rowData[0]);
    }
    return $parse->propertyData();
}

<?php

define('COL_START'      , 'B');      // The first significant column in xlsx
define('COL_END'        , 'D');      // The last column in xlsx
define('COL_VISIBILITY' , 'I');      // The column that toggles visibility in xlsx

define('PC_CACHE_DIRNAME' , 'pccache');

require_once 'lib/PHPExcel/Classes/PHPExcel/IOFactory.php';
require_once 'lib/Parse.php';

function pc_menu() {
    $items['admin/property-compendium'] = array(
        'title' => 'Property compendium',
        'access callback' => true,
        'description' => 'Manage property compendium',
        'page callback' => 'pc_overview_page',
        'file' => 'pc.admin.inc',
    );

    $items['admin/property-compendium/overview'] = array(
        'title' => 'Overview',
        'description' => 'Overview of properties',
        'file' => 'pc.admin.inc',
        'type' => MENU_DEFAULT_LOCAL_TASK
    );

    $items['admin/property-compendium/upload'] = array(
        'title' => 'Upload',
        'description' => 'Upload property compendium data',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('pc_upload_form'),
        'access callback' => true,
        'file' => 'pc.admin.inc',
        'type' => MENU_LOCAL_TASK
    );

    $items['property-portfolio/profiles/%pc_property'] = array(
        'title callback' => 'pc_title',
        'title arguments' => array(2),
        'page callback' => 'pc_property_page',
        'page arguments' => array(2),
        'file' => 'pc.pages.inc',
        'access callback' => true
    );

    return $items;
}

/**
 * hook_load
 */
function pc_property_load($urititle) {

    $title = pc_title_from_urititle($urititle);

    $cacheid = md5($title);
    $cachefile = __DIR__ . '/cache/' .$cacheid. '.json';

    if (file_exists($cachefile)) {
        return json_decode(file_get_contents($cachefile), 1);
    } else {
        $file = file_load(variable_get('compendium', false));
        $filepath = drupal_realpath($file->uri);
        $objPHPExcel = PHPExcel_IOFactory::load($filepath);
        $sheet = $objPHPExcel->getSheetByName($title);

        $data = pc_process_sheet($sheet);

        return $data;
    }
}

/**
 * hook_theme
 */
function pc_theme() {
    return array(
        'pie' => array(
            'variables' => array('piedata' => array())
        ),
        'profile' => array(
            'variables' => array(
                'tables' => NULL
                , 'title' => NULL
                , 'chart' => NULL
                , 'centre_narrative' => NULL
            ),
            'template' => 'property'
        )
    );
}

/**
 * pie theme function
 * Creates a pie chart
 * theme('pie', array('values' => array(), 'legend' => array()));
 */
function theme_pie($variables) {

    drupal_add_js( drupal_get_path('module', 'pc') . '/lib/d3/d3.v2.js');
    drupal_add_js( drupal_get_path('module', 'pc') . '/js/pie.js', array('weight' => 99));
    $id = rand();

    $piedata = json_encode($variables['piedata']);

    return <<<EOT
<div class='piechart' id='pie$id'></div>
<script>
var piedata$id = $piedata;
drawPie(piedata$id, '#pie$id');
</script>
EOT;

}

function pc_process_sheet($sheet) {
    $cacheid = md5($sheet->getTitle());
    $cachefile = __DIR__ . '/cache/' .$cacheid. '.json';

    if (file_exists($cachefile)) {
        return json_decode(file_get_contents($cachefile), true);
    } else {
        $rowmax = $sheet->getHighestRow();

        $parse = new Parse();

        $title = $sheet->getTitle();

        for ($row = 1; $row <=$rowmax; $row++) {
            // read row of data into an array
            $loc = COL_START . $row . ':'. COL_END . $row;

            $rowData = $sheet->rangeToArray($loc,
                NULL,
                TRUE,
                TRUE);

            $parse->processRow($rowData[0]);
        }
        $data = $parse->propertyData();
        $data['title'] = $sheet->getTitle();

        file_put_contents($cachefile, json_encode($data));
        return $data;
    }
}

/**
 * Callbacks
 */
function pc_title($pc_property) {
    return $pc_property['title'];
}

/**
 * Helpers
 */
function pc_title_from_urititle($urititle) {
    return str_replace('-', ' ', $urititle);
}

function pc_urititle_from_title($title) {
    return str_replace(' ', '-', $title);
}

function pc_piedata_from_graphdata($graphdata) {
    return array(
        'values' => array_values($graphdata),
        'legend' => array_keys($graphdata),
    );
}

function pc_cache_dirpath() {
    $dir = drupal_realpath('public://'. PC_CACHE_DIRNAME);
    file_prepare_directory($dir, FILE_MODIFY_PERMISSIONS | FILE_CREATE_DIRECTORY );
    return $dir;
}

function pc_cache_file($urititle) {
    $title = pc_title_from_urititle($urititle);
    $filename = md5($title).'.json';
    return pc_cache_dirpath()."/$filename";
}

function pc_delete_cache() {
    $cachefiles = glob( __DIR__ . '/cache/*');
    array_map('unlink', $cachefiles);
}
